// 3rd party plugins definition
plugins {
    id 'com.github.kt3k.coveralls' version '2.4.0x'
    id 'me.tatarka.retrolambda' version '3.3.1'
    id 'com.jfrog.bintray' version '1.7.2'
}

apply plugin: 'com.android.library'
apply from: "${rootProject.rootDir}/script/version.gradle"

retrolambda {
    bytecodeVersion 51
}

// Android configuration
android {
    compileSdkVersion 25
    buildToolsVersion '25.0.1'
    defaultPublishConfig 'release'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode Integer.parseInt(System.getenv('CIRCLE_BUILD_NUM') ?: '0')
        versionName prepareVersionName()
        project.archivesBaseName = 'atlantis'
        project.version = android.defaultConfig.versionName
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

repositories {
    jcenter()
}

dependencies {
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'org.nanohttpd:nanohttpd:2.3.1'
    compile 'com.google.guava:guava:19.0'
    compile 'com.squareup.okio:okio:1.11.0'

    testCompile 'org.mockito:mockito-core:2.1.0'
    testCompile 'org.robolectric:robolectric:3.1.2'
    testCompile 'org.assertj:assertj-core:3.5.2'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'junit:junit:4.12'
}

// Custom archive build configurations
apply from: "${rootProject.rootDir}/script/aar.gradle"
apply from: "${rootProject.rootDir}/script/jar.gradle"
apply from: "${rootProject.rootDir}/script/jacoco.gradle"
apply from: "${rootProject.rootDir}/script/publish.gradle"
apply from: "${rootProject.rootDir}/script/bintray.gradle"
apply from: "${rootProject.rootDir}/script/coveralls.gradle"

clean {
    delete "${rootProject.rootDir}/docs"
}
